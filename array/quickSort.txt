n = [3,2,5,7,4,8,1]

pivot = a[0] = 3
low = 0
high = len(n) - 1 = 6

i = low 
j = high 

3 == 3 no  i = 0
3 > 2 no  i = 1
3 < 5 yes   i = 2

3 > 1 yes 

swap (arr[i] , arr[j])

[3,2,1,7,4,8,5]

i = 2
3 > 1 no 
3 < 7 yes

3 < 5 no  j = 6 
3 < 8 no  j = 5
3 < 4 no  j = 4
3 < 7 no  j = 3
3 > 1 yes j = 2  j has crossed I so doesnt matter, you swap j with the pivot

[1,2,3,7,4,8,5]

n = [3,2,5,7,4,8,1]
pivot = 3
yes 

3 < 5 no  j = 6 
3 < 8 no  j = 5
3 < 4 no  j = 4
3 < 7 no  j = 3
3 > 1 yes j = 2  j has crossed I so doesnt matter, you swap j with the pivot

[1,2,3,7,4,8,5]
     pIndex

[1,2,3,7,4,8,5]
[1, 2]  [7,4,8,5]

QuickSort(arr, low, high): [1, 2]
    if( low < high):
        partitionIndex = f(arr, low, high) = 2
        QuickSort(arr, low, partitionIndex - 1) [1, 2]
        QuickSort(arr, partitionIndex + 1, high) [7,4,8,5]

Qs(arr, low, high):
    i = low 
    j = high
    pivot = arr[0]

    while(i < j):

        while(arr[i] <= pivot and i <= high):
            i += 1
        
        while(arr[j] > pivot and j >= low):
            j -= 1
        
        if(i < j)
            swap(arr[i], arr[j])
    
    swap(arr[j], pivot)

    return j
        
        
